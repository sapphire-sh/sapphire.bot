!function(t){var e={};function r(o){if(e[o])return e[o].exports;var n=e[o]={i:o,l:!1,exports:{}};return t[o].call(n.exports,n,n.exports,r),n.l=!0,n.exports}r.m=t,r.c=e,r.d=function(t,e,o){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(r.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var n in t)r.d(o,n,function(e){return t[e]}.bind(null,n));return o},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=1)}([function(t,e){t.exports=require("puppeteer")},function(t,e,r){"use strict";r.r(e);var o=r(0),n=r.n(o);class s{constructor(){this.shouldProcess=!1,this.browser=null,this.commandQueue=[]}async initialize(){console.log("parser initialize"),this.browser=await n.a.launch(),this.shouldProcess=!0}async start(){for(console.log("parser start");this.shouldProcess;)await this.process(),await new Promise(t=>{setTimeout(t,1e3)})}push(t){this.commandQueue.push(t)}async open(t){console.log(`open: ${t}`);const e=await this.browser.createIncognitoBrowserContext(),r=await e.newPage();return await r.goto(t,{waitUntil:"networkidle2"}),r}async parse(t){console.log("parse");const{url:e,selectorQuery:r}=t,o=await this.open(e),n=await o.$$(r);console.log(n.length);for(const t of n){const[e,r]=await t.$$eval("td",t=>[t[0].textContent.trim(),t[1].textContent.trim()]),[o,n]=await t.$$eval("td a",t=>[t[1].getAttribute("href"),t[1].textContent.trim()]);console.log({id:e,type:r,title:o,link:n})}}async process(){if(console.log(`parser process ${this.commandQueue.length}`),!1===this.shouldProcess)return;if(null===this.browser)return;if(0===this.commandQueue.length)return;const t=this.commandQueue.shift();await this.parse(t)}}const a=new class{constructor(){this.parser=new s}async start(){console.log("app start"),await this.parser.initialize(),this.parser.start(),this.parser.push({selectorQuery:"table.board_list_table tr.table_body:not(.notice)",url:"http://bbs.ruliweb.com/news/board/1020"})}};(async()=>{try{await a.start()}catch(t){console.error(t)}})()}]);
//# sourceMappingURL=main.js.map